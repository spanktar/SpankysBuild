[buildout]

## This is the local development buildout

extends = base.cfg
          http://dist.plone.org/release/4.2.5/versions.cfg
          versions.cfg

parts +=
    omelette
    zopepy
    test
    coverage-report
    zopeskel
    checkversions
    mkrelease
    paster
    plone
    backups


# Installs links to all installed packages to ``parts/omelette``.
[omelette]
recipe = collective.recipe.omelette
eggs = ${plone:eggs}


# Installs the ``bin/zopepy`` interpreter.
[zopepy]
recipe = zc.recipe.egg
eggs = ${plone:eggs}
interpreter = zopepy


# Test runner. Run: ``bin/test`` to execute all tests
[test]
recipe = zc.recipe.testrunner
eggs = ${eggs:test}
defaults = ['--auto-color', '--auto-progress']


# Coverage report generator.
# Run: ``bin/test --coverage=coverage``
# and then: ``bin/coveragereport``
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('parts/test/coverage', 'coverage')


# Installs ZopeSkel, which can be used to create new packages
# Run: ``bin/zopeskel``
[zopeskel]
recipe = zc.recipe.egg
eggs = ZopeSkel<2.99


# Tool to help check for new versions.
# Run: ``bin/checkversions versions.cfg``
[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]


# Tool to make releases
# Run: ``bin/mkrelease --help``
[mkrelease]
recipe = zc.recipe.egg
eggs = jarn.mkrelease


[paster]
recipe = zc.recipe.egg
eggs =
        PasteScript
        ZopeSkel<2.99
        zopeskel.dexterity
        ${plone:eggs}


### Development zope and zeo setup
### This is completely separate from the live deploy
### since everything is on one box
[baseports]
zeo-address = 127.0.0.1:8100


[plone]
recipe = plone.recipe.zope2instance
zeo-client = true
zeo-address = ${baseports:zeo-address}
user = admin:friday
http-address = 0.0.0.0:8080
blob-storage = ${zeo:blob-storage}
shared-blob = on
debug-mode = on
verbose-security = on
effective-user = plone
# Put the log, pid, lock files in var/plone
event-log = ${buildout:directory}/var/${:_buildout_section_name_}/event.log
z2-log    = ${buildout:directory}/var/${:_buildout_section_name_}/Z2.log
pid-file  = ${buildout:directory}/var/${:_buildout_section_name_}/plone.pid
lock-file = ${buildout:directory}/var/${:_buildout_section_name_}/plone.lock
eggs = ${eggs:main}
       ${eggs:test}
       ${eggs:devtools}
event-log-level = INFO
environment-vars = 
    API_SERVER dev01.example.com
    
# Beaker Configuration
zope-conf-additional =
    <product-config beaker>
        cache.type              file
        cache.data_dir          ${buildout:directory}/var/cache/data
        cache.lock_dir          ${buildout:directory}/var/cache/lock
        cache.regions           short, long
        cache.short.expire      60
        cache.long.expire       3600

        session.type            file
        session.data_dir        ${buildout:directory}/var/sessions/data
        session.lock_dir        ${buildout:directory}/var/sessions/lock
        session.key             beaker.session
        session.secret          secretcornedbeefhashrecipe
    </product-config>
zcml =
    collective.beaker
      

[zeo]
recipe = plone.recipe.zeoserver
zeo-address = ${baseports:zeo-address}
# Put the log, pid and socket files in var/zeoserver
zeo-log      = ${buildout:directory}/var/${:_buildout_section_name_}/zeoserver.log
pid-file     = ${buildout:directory}/var/${:_buildout_section_name_}/zeoserver.pid
socket-name  = ${buildout:directory}/var/${:_buildout_section_name_}/zeo.zdsock
blob-storage = ${buildout:directory}/var/blobstorage


[repos]
repo = https://svn.example.com/repository/plone/packages/trunk


[backups]
recipe = collective.recipe.backup
keep = 3
location = ${buildout:directory}/var/backups
